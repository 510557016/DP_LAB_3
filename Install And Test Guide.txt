

1. Install PyTorch CPU Only
pip3 install --no-cache-dir torch torchvision torchaudio

2. Check Your Installation
python
>>> import torch
>>> torch.__version__

3. install YOLOv5
git clone https://github.com/ultralytics/yolov5
cd yolov5
pip3 install --no-cache-dir -r requirements.txt

4.check install[in yolov5 doc]
pyton
>> import torch
>> import utils
>> display = utils.notebook_init()  # checks

Checking setup...
YOLOv5 🚀 v6.2-237-g55e9516 Python-3.8.10 torch-1.12.1+cpu CPU
Setup complete ✅ (4 CPUs, 7.5 GB RAM, 37.8/108.0 GB disk)

5. download coco128 sample train image
wget https://ultralytics.com/assets/coco128.zip

6. update coco128.yaml
vi /yolov5/data/coco128.yaml
#path: ../yolov5/            # dataset root dir
train: your_path/image/train # train images (relative to 'path') 128 images
val: your_path/image/train   # val images (relative to 'path') 128 images

7. download *.pt file
https://github.com/ultralytics/yolov5/releases/download/v6.2/yolov5n.pt
https://github.com/ultralytics/yolov5/releases/download/v6.2/yolov5s.pt
.....

"notebook no GPU can't running"

8.upload yolov5 doc to google cloud

9.google collab comment
[train] 
import os
path = "/content/drive/MyDrive/yolov5"
os.chdir(path)
os.listdir(path)
!python train.py --img 640 --batch 16 --epochs 100 --data {YAML_NAME} --weights yolov5s.pt --cache
[Validate]
import os
path = "/content/drive/MyDrive/yolov5"
os.chdir(path)
os.listdir(path)
!python val.py --weights best.pt --data coco128.yaml --img 640 --half
[Inferenece]

9. train data labels tranfrom
PascalVOC(XML) 2 COCO(json)
run voc2coco.py
get labels file

10. labels need split into train labels / val labels
exapmle 
labels/train2022/
labels/val2022/

11. if change labels please del lables/ *.cache

12. result 解讀
    GIoU(Box)：推测为GIoU损失函数均值，越小方框越准
    Objectness(Obj)：推测为目标检测loss均值，越小目标检测越准
    Classification(cls)：推测为分类loss均值，越小分类越准
    Precision：精度（找对的正类/所有找到的正类） 
    Recall：召回率（找对的正类/所有本应该被找对的正类
    mAP@0.5 & mAP@0.5:0.95：就是mAP是用Precision和Recall作为两轴作图后围成的面积，
        m表示平均，@后面的数表示判定iou为正负样本的阈值，@0.5:0.95表示阈值取0.5:0.05:0.95后取均值

    一般训练结果主要观察精度和召回率波动情况（波动不是很大则训练效果较好）

    PR曲线（Precision-Recall) : 即以Recall为横坐标，Precision为纵坐标组成的曲线
    





